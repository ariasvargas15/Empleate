package com.medianet.cajas.server;

import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.media.AudioManager;
import android.media.ToneGenerator;
import android.net.ConnectivityManager;
import android.net.LinkAddress;
import android.net.NetworkInfo;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.os.Bundle;
import android.support.annotation.RequiresApi;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;

import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.ContextThemeWrapper;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.WindowManager;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.android.newpos.pay.R;
import com.android.newpos.pay.StartAppMEDIANET;
import com.medianet.definesMEDIANET.DefinesMEDIANET;
import com.medianet.menus.menus;


import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.UnknownHostException;
import java.util.Collections;
import java.util.List;
import java.util.Locale;

import cn.desert.newpos.payui.master.MasterControl;

import static com.android.newpos.pay.StartAppMEDIANET.VERSION;

public class ServerActivity extends AppCompatActivity {

    private static ThreadAttendRequest thread;
    private ImageView config;
    private TextView tv_versionC;
    public static Dialog dialog;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
        setContentView(R.layout.activity_server_tcp);
        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
        MasterControl.setMcontext(this);
         agregarToolbar();
         setVersionC();

       if(thread == null){
           thread = new ThreadAttendRequest(this);
           thread.start();
       }

    }

    @Override
    protected void onResume() {
        super.onResume();
        menus.contFallback = 0;
    }

    /*
    @RequiresApi(api = Build.VERSION_CODES.M)
    public void verConfig(View v){

        String ip= getIP();
        String puerto= String.valueOf(Server.PORT);

        AlertDialog.Builder dialog= new AlertDialog.Builder(ServerActivity.this);
        dialog.setTitle("Configuración  actual de Conexión");

        if(ip.isEmpty()){
            ip="No conectado a wifi";
            puerto="";
            dialog.setMessage("No conectado a la red Wifi");
        }el